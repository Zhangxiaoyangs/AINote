'''
使用tensorflow提供的2范数函数计算向量
平方和开根号 (计算最短举例)

2范数，也称为欧几里得范数，是一种用于衡量向量长度的度量。
在二维平面中，2范数等于向量的长度，即从原点到向量的末端的距离1。
在三维空间中，2范数等于向量的长度，即从原点到向量的末端的距离1。
在机器学习中，2范数通常用于正则化和特征选择1。


对于一个n维向量x = (x1, x2, …, xn)，它的2范数定义如下：
∣∣x∣∣2​=i=1∑n​xi2​​
其中，xi​ 是向量x的第i个元素1。

例如，假设有一个二维向量 x=(3,4)。它的2范数可以通过以下公式计算：
∣∣x∣∣2​=32+42​=5
这意味着该向量的长度为5。同样地，对于三维向量 y=(1,2,3)，它的2范数可以通过以下公式计算：
∣∣y∣∣2​=12+22+32​=14​

'''
import tensorflow as tf
import numpy as np

#########################

def log(prefix="",val=""):
    print(prefix,val,"\n")
#2范数：平方和开根号
a = tf.fill([1,2],value=2.)
log("a:",a)
# 计算a的范数
b = tf.norm(a)
log("a的2范数b：",b)

# 计算验证
a = tf.square(a)
log("a的平方：",a)

a = tf.reduce_sum(a)
log("a平方后的和：",a)

b = tf.sqrt(a)
log("a平方和后开根号：",b)